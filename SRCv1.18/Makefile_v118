#
# makefile to build kcarta.x
# >>>>>>>>  make basic >>>>>>>>>>>>>>>>>> is the easiest one!!
#
# "make" or "make scat" will compile kcarta.x and move it to
# its home in the ../BIN directory
# 
# "make kcarta.x" will compile kcarta.x and leave it in the current
# directory
#
# Example compiler flags and libraries are included for several
# compilers and architectures.  Initial testing should be done with
# array checking on; When things are working OK, you can leave out
# the array checking and crank up the optimization.

# Things to do before typing "Make"
# Remember all .param and include files are in ../INCLUDE (kcarta.param, 
#    scatter.param, pre_defined.param, gauss.param) while for rtpdefs.f, we 
#    have a Makefile directive for the include file (see RTP section below)

# ==================================
# 1) Type "make clean" to clear up everything
# 2) Set the correct paths, parameters in ../INCLUDE/kcarta.param
#    (eg see the IEEE_BE vs IEEE_LE note below)
# 3) Set the correct HDF (HDF_INSTALL,HDFLIB) and RTP (RTPLIB) flags
#    Also set up the correct path to the RTP include file rtpdefs.f 
#    (RTPINC and RTPDEFS_FILE)
# 4) Also correctly set the DISTDIR (this is where the databases are)
# 5) Set up the options for your compiler (SGI,Linux,Sun,...)
#    This could include setting up the correct path to the blas library ...
#    see LIBS for this
# 6) You might need to set up the RTP library package. Go to where it is
#    (eg ../../RTP/Src) Check that the Makefile options there are set up for 
#    your compiler, type "make clean" and then "make"
# 7) You might need to set up the BLAS library package. Go to where it is
#    (eg ../LIB/blas.ref) Check that the Makefile options there are set up 
#    for your compiler, type "make clean" and then "make"
#          >>>>>> next two are optional <<<<<<<<<<
# 8) Set up the SCATTER_ALL parameter below, which tells the linker which
#    scattering routines to use in the complete kcarta package (kcarta.x)
#         >>>>>> make the executable <<<<<<<
# 9) if you want basic    kcarta package, type "make" or "make basic"
#    if you want complete kcarta (jacobs+all scattering), type "make scat"
#    if you do NOT want link to rtp libs, type "make basicTXT" or "make scatTXT"
#
# Other things to do before getting package working
# ==================================================
# 1) You need to set up KALAYERS eventually. Go to where it is 
#    (eg ../../KLAYERS/Src/)  Check that the Makefile options 
#    there are set up for your compiler. You will also need to set the 
#    correct HDF (HDF_INSTALL,HDFLIB) and RTP (RTPLIB) flags
#    Type "make clean" and then "make"
# 2) Go to ../UTILITY  Check that the Makefile options there are set up for 
#    your compiler. Note that SGI F77 and LINUX g77 support fseeks, which
#    make the readers fast. If you are stuck with Absoft F77 then you cannot
#    use fseeks, and need to go to the ReEADwoFSEEK directory!
#      If you use SGI F77, simply type "make" and things should be fine
#      If you use LINUX g77, simply type "make" and things will crap out as
#        g77 defines fseek as a subroutine, not a function. So you have to go 
#        edit readkcBasic.f and readbinary.f, turning off the call as a 
#        function, and turning it on as a subroutine
#      If you use Absoft F77 or some other compiler that does not support 
#        fseeks, go to READwoFSEEK and type "make clean", "make" after
#        appropriately editing the Makefile there
#    Note that this only compiles the BASIC reader .. if you want the more
#    advanced reader, and/or the jacobian and flux readers, you need to
#    type "make execs"
#    Warning : if you updated the kCARTA distribution, type "make execdist"
# 3) Go to ../SCRIPTS and type
#       basic.sc BASIC/USStandardProf_NEW dodo.dat
#    If this works, looks like everything is cool as the script
#      changes a point profile to a RTP file (using MATLAB)
#      sends this profile thru klayers_rtp and outputs a layer averaged 
#      profile sends this profile, plus appropriate driver namelist file, 
#      thru kcarta sends the resulting output thru the f77 readkcBasic reader
#      (the resulting output eg dod.dat and other work files are in ../WORK)

###################### NOTE : IEEE_BE vs IEEE_LE ###########################
## There are a number of binary files that are supplied with this code.   ##
## We supply both endian versions (big endian and little endian).         ##
## However, it is the users responsibility to ensure that the code picks  ##
## up and reads the correct version of the files. The main ones are the   ##
## entire kCARTA database. In addition, there are xsecdata, CKD (water    ##
## continuum) and SOLAR radiance datafiles that need to be used correctly ##
##                                                                        ##
## To read the main kCARTA database, ensure that the correct kWaterPath   ##
## and kCompPath parameters are set in kcarta.param, before compilation   ##
## For example, we could have                                             ##
##      PARAMETER (kWaterPath = '/DATA/kcarta/h2o.ieee-be/')              ##
##      PARAMETER (kCompPath = '/DATA/kcarta/etc.ieee-be/')               ##
##      PARAMETER (kCKDPath       = '../DATA/General/CKDieee_be/')        ##
##      PARAMETER (kSolarPath     = '../DATA/General/SOLAR_be/')          ##
##                                                                        ##
## To make doubly and triply sure things have worked, do the following    ##
## To read the correct SOLAR data, CKD data and xsecdata, go to the       ##
## ../DATA/General subdirectory. If necessary, delete the supplied        ##
## symbolic links and make the new required ones eg :                     ##
##   rm SOLAR                                                             ##
##   ln -s SOLARieee_Xe SOLAR                                             ##
##   rm CKD                                                               ##
##   ln -s CKDieee_Xe CKD                                                 ##
##   rm xsecdata.dat                                                      ##
##   ln -s xsecdata.dat.XXXXX xsecdata.dat                                ##
############################################################################

############################################################################
##          set up the appropriate RTP and HDF paths and libraries        ##
##          current options are SGI and LINUX                             ##
############################################################################
# ---------
# HDF flags
# ---------
# HDF_INSTALL : set this to point to the HDF location
# HDFLIB : hdf lib, relative to install path above
#
# linux
# this is on asl.umbc.edu
# HDF_INSTALL = /usr/local/hdf
# HDFLIB   = -L$(HDF_INSTALL)/lib -lmfhdf -ldf -ljpeg -lz

# this is on taro.umbc.edu
# set HDFHOME to point to the local HDF installation, pre Aug 2015
# HDF_INSTALL = /asl/opt
# HDFLIB   = -L$(HDF_INSTALL)/lib -lmfhdf -ldf -ljpeg -lz

# Paul has split things post Aug 2015
HDF_INSTALL1 = /asl/opt/hdf/4.2r4
HDFLIB1   = -L$(HDF_INSTALL1)/lib -ldf -ljpeg -lz       ## -lmfhdf

# more libs
HDF_INSTALL2 = /asl/opt/szip/2.1
HDFLIB2   = -L$(HDF_INSTALL2)/lib -lsz -L/usr/lib64/libsz.so.2

HDFLIB = $(HDFLIB1) $(HDFLIB2)

# ---------
# RTP flags
# ---------
# RTPLIB : point this to the lib you created in RTP/Src_rtp
#
# linux
# these are gases 1 .. 63
# RTPLIB = -L/asl/packages/rtpV105/lib -lrtp
#
# these are gases 1 .. 63 plus clouds 201 - 203
# this is on asl.umbc.edu
# RTPLIB = -L/asl/packages/rtpV105_4500/lib -lrtp
#
# rtpV105 on taro.umbc.edu
# RTPHOME = /asl/packages/rtpV105
# RTPLIB = -L$(RTPHOME)/lib -lrtp
#
### rtpV201 on taro.umbc.edu for g80, use this this works <<<<<<<<<<<<<<
### rtpV201 on taro.umbc.edu for g80, use this this works <<<<<<<<<<<<<<
#RTPHOME = /asl/packages/rtpV201_g80
#RTPLIB = -L$(RTPHOME)/lib -lrtp
### rtpV201 on taro.umbc.edu for g80, use this this works <<<<<<<<<<<<<<
### rtpV201 on taro.umbc.edu for g80, use this this works <<<<<<<<<<<<<<
#
### rtpV201 on taro.umbc.edu, 16 gases
#RTPHOME = /asl/packages/rtpV201
#RTPLIB = -L$(RTPHOME)/lib -lrtp
#
### rtpV201 on compiled with ifort
RTPHOME = /home/sergio/git/rtp/rtpV201
RTPLIB = -L$(RTPHOME)/lib -lrtp
#

# ---------------
# RTP include dir
# ---------------
# this is where the RTP package files are stored
#
# linux
# this is on asl.umbc.edu
# RTPINC = -I/asl/packages/rtpV105_4500/include
# RTPDEFS_FILE = /asl/packages/rtpV105_4500/include/rtpdefs.f
#
# rtpV105 on taro.umbc.edu
#RTPINC = -I/asl/packages/rtpV105/include
#RTPDEFS_FILE = /asl/packages/rtpV105/include/rtpdefs.f
#
### 80 gases rtpV201 on taro.umbc.edu <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< use this, this works
#RTPINC = -I/asl/packages/rtpV201_g80/include
#RTPDEFS_FILE = /asl/packages/rtpV201_g80/include/rtpdefs.f
###RTPDEFS_FILE = /asl/packages/rtpV201_g80/include/rtpdefs_f90.f90
### 80 gases rtpV201 on taro.umbc.edu <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< use this, this works
#
### 16 gases rtpV201 on taro.umbc.edu <<<<<<<<<<<<<<<<<<<<<<<<<<<<
#RTPINC = -I/asl/packages/rtpV201/include
#RTPDEFS_FILE = /asl/packages/rtpV201/include/rtpdefs.f
#RTPINC = -I/home/sergio/git/rtp/rtpV201/include
#RTPDEFS_FILE = /home/sergio/git/rtp/rtpV201/include/rtpdefs.f
#
### 16 gases rtpV201 with ifort
RTPINC = -I/home/sergio/git/rtp/rtpV201/include
RTPDEFS_FILE = /home/sergio/git/rtp/rtpV201/include/rtpdefs.f
#

SHELL = /bin/sh

############################################################################
## set up the appropriate compiler and its options                        ##
## NOTE 1) only SGI F77 and Absoft have been tested with the autodoubling ##
##         required by DISORT                                             ##
##      2) g77 does not support Fortan structures, so it cannot be used   ##
##         when compiling the RTP related code                            ##
##      3) If you ignore the above two limitations, and can figure out if ##
##         your compiler supports autodoubling and F77 structures, then   ##
##         we have a set of options for SunOS and SUN Solaris F77         ##
############################################################################

# SGI Fortran
# ------------
# SGI compiler options; already have the LAPACK routines built it
# -u  : turn off implicit typing of variables
# -g  : generate debugging information (turns off optimization)
# -C  : do run time subscript range checking
# -w0 : inform about unused variables 
# -O3 : heavy optimization
# -64 : 64-bit objects (libraries must match)
#
#FORTRANX=/usr/bin/f77
## FLAGS = -static -C -col120
#FLAGS = -static -O2 -64 -col120 -C
#UFLAG = -u
#LIBS  = -lblas -lcomplib.sgimath
#FDOUBLE = -r8

# Linux with Absoft Fortran
# --------------------------
# Absoft compiler options
# -f	fold all names to lower case
# -N109 fold all names to upper case
# -N15  so that LAPACK lib can be included; adds trailing underscores
# -W	wide source file
# -w	suppress warning messages (absoft is more fussy than SGI or g77)
# -A	alignment warnings
# -C	check array bounds
# -O    some optimizations
# -N3   add record info to unformatted files
# -s    static allocation
# -N2   force intrinsic double functions
# -N113 force double precision 
# -N114 force untyped variables as warnings
# -g    symbol and line info included, for debugging purposes
# -v    verbose warnings
# -fpic position independent code

############ 
# -P    profiling info for debugging with "gprof", also do final 
#       linking, compile as 
# kcarta: $(OBJS) $(OBJSPY) 
#       $(FORTRANX) -P $(OBJS) $(OBJSPY) $(RTPLIB) $(HDFLIB) $(FLIB) 
# after compiling the code with f77 -P, a file "gmon.out" is produced 
# so then do     gprof ../BIN/bkcarta.x gmon.out >& ugh; more ugh
#FORTRANX=f77 -P 
############ 
#
#FORTRANX=f77
#FORTRANX=f77 -P
FORTRANX=/asl/opt/absoft/absoft10.0/bin/af77  ### <<<<<<< works
#FORTRANX=/asl/opt/absoft/absoft10.0/bin/af77 -P
#
#### UFLAG = -N114  ### this is now obsolete
# UFLAG = <<<<<<<
#
#FLAGS = -v -g -W -A -C -N3 -s -N109
#
#### code development : turn on -C and turn off -02 (check bounds on, no optimization) #### 
#### code development : turn on -C and turn off -02 (check bounds on, no optimization) #### 
#FLAGS     = -w -W -C -O -N3 -s -A -f -N15
#FLAGS_RTP = -w -W -C -O -N3 -s
#### code development : turn on -C and turn off -02 (check bounds on, no optimization) #### 
#### code development : turn on -C and turn off -02 (check bounds on, no optimization) #### 
#
#### when you are sure code works, turn off -C and turn up -03 or -04 #### 
FLAGS     = -w -W -O3 -N3 -s -A -f -N15  ## <<<
FLAGS_RTP = -w -W -O3 -N3 -s             ## <<
#### when you are sure code works, turn off -C and turn up -03 or -04 #### 
#
#LIBS = -lU77 -L../LIB/blas.ref -lblas -L/usr/local/absoft/lib -llapack
#LIBS = -lU77 -L/usr/local/absoft/lib -llapack -lblas
#LIBS = -lU77 -L/usr/local/absoft/lib -lblas
LIBS = -lU77 -L../LIB/blas.ref -lblas #<<<
FDOUBLE = -N2 -N113                   #<<<

# ifort F77
# ------------
# -u  : turn off implicit typing of variables
# -g  : generate debugging information (turns off optimization)
# -C  : do run time subscript range checking
# -w0 : inform about unused variables 
# -O3 : heavy optimization
# -64 : 64-bit objects (libraries must match)
# -us : puts trailing underscore
#
# see https://software.intel.com/en-us/articles/intel-mkl-link-line-advisor
# -i8 -I${MKLROOT}/include/mic/ilp64 -I${MKLROOT}/include -mmic
# see http://fulla.fnal.gov/acml/html/Intro.html#Intro,
#     https://software.intel.com/en-us/node/510802 claims libimf.a,libm.a automatically linked in
# ifort "icc does not adds underscores to symbols"
# >>> mkl is for dgemm
# (http://hpcf.umbc.edu/using-your-hpcf-account/#heading_toc_j_5). To answer your question do the following:
# $ module unload intel/compiler/64/15.0/full
# $ module load intel/compiler/64/15.0/full
FORTRANX = /cm/shared/apps/intel/composer_xe/2015.3.187/bin/intel64/ifort
#FLAGS_RTP = -implicitnone -msse2 -extend-source 132 -O3 -names lowercase -check bounds -assume nounderscore
#FLAGS = -implicitnone -msse2 -extend-source 132 -O1 -names lowercase -check bounds -assume nounderscore -heap-arrays -g -traceback -debug inline-debug-info
FLAGS = -implicitnone -msse2 -extend-source 132 -O3 -names lowercase -assume nounderscore -heap-arrays
#UFLAG = 
LIBS  = -lblas -mkl
FDOUBLE = -r8

# Warning: this will not compile the structures (rtp_interface.f)
# However it is a good compile test for the rest of the code
# Linux with g77
# ---------------
#FORTRANX=/usr/bin/g77
#FLAGS= -fcase-lower -ffixed-line-length-120
#LIBS = -L ../LIB -lblas

#Linux with PGF Fortran
#----------------------
##FORTRANX = pgf77
##FORTRANX = pgf90
## find exec       module avail
## need to do      module load pgi/64/15.7
#FORTRANX = /cm/shared/apps/pgi/15.7/linux86-64/15.7/bin/pgf77
#UFLAG = -Mdclchk
###FLAGS = -Mextend -Mbounds -Mupcase -O2
###FLAGS = -Mextend -Mnoupcase -O3
###FLAGS_RTP = -Mextend -Mnoupcase -O3
#FLAGS = -Mextend -Mnoupcase -O2 -Mbounds
#FLAGS_RTP = -Mextend -Mnoupcase -O2 -Mbounds
#LIBS = -L ../LIB/blas.ref -lblas   
#FDOUBLE = -R8

# SunOS FORTRAN
# -------------
# for compiling on air2.ssec.wisc.edu:Solaris 2.5.1 on a Sun Ultra-2
# -e     wide sources
# -fast  plausible optimizations
# -w     ignore warning
# -g     link w/ debugging info (don't use w/ optimization)
# 
#FORTRANX = /opt/SUNWspro/bin/f77
#### FLAGS = -c -g -u -O0  don't seem to need -static
#### FLAGS = -e -fast -w 
#FLAGS = -e -fast -w
#LIBS = -lblas

# SUN Solaris Fortran
# -------------------
# SUN compiler options
# -g  : generate debugging information (turns off optimization)
# -e     wide sources
# -O3 : heavy optimization
# -w     ignore warning
# -xarch: Sparc chip family
#       v8plus for UltraSPARC or UltraSPARC II  (sun4u)
#       v8 for SuperSPARC or SuperSPARC II or HyperSPARC (sun4m or Sun4d)
#       v8a for microSPARC or microSPARC II  (sun4m)
#       v7 for earlier SPARC chips  (sun4c or sun4m for Sun4-630/670/690)
# -dalign to be compatible with the Sun Performance library
# -xlic_lib=sunperf Link option for selecting the Sun Performance library
#FORTRANX=f77
#FLAGS = -O3 -dalign -xarch=v8plus -e -w
#LIBS  = -xlic_lib=sunperf

#DEC Alpha Fortran
#------------------
# DEC compiler options
# -extend_source : wide sources
# -C             : run time checks on array and character subscripts
# -O4            : optimization
# -names lowercase : change all cases
#FORTRANX=f77
#FLAGS = -extend_source -C -names lowercase -warn argument_checking
#LIBS  = -lblas

###### want to change this to /asl/www/pub/kcarta
# The following variables are used by "make dist" and "make ftp", to
# bundle up a kcarta distribution.  KTAR is a path and filename for
# the tarfile created by "make dist", and KFTP is the machine and
# path to the FTP archive.

KTAR     = /salsify/scratch4/kcarta118.tar
KTARBUG  = /salsify/scratch4/kcarta_bugfix118.tar
KTARBUGGIVEOUT  = /salsify/scratch4/kcarta_bugfix_giveout118.tar
KGIVEOUT = /salsify/scratch4/kcartagiveout118.tar
KDATA    = /salsify/scratch4/kcartaDATA.tar
KMATLAB  = /salsify/scratch4/kcartaMATLAB.tar
KFTP     = kale:/usr/local/ftp/pub/kcarta

KTAR     = /asl/ftp/pub/packages/kcarta118.tar
KTARBUG  = /asl/ftp/pub/packages/kcarta_bugfix118.tar
KTARBUGGIVEOUT  = /asl/ftp/pub/packages/kcarta_bugfix_giveout118.tar
KGIVEOUT = /asl/ftp/pub/packages/kcartagiveout118.tar
KDATA    = /asl/ftp/pub/packages/kcartaDATA.tar
KMATLAB  = /asl/ftp/pub/packages/kcartaMATLAB.tar
KFTP     = /asl/ftp/pub/packages/kcarta

KTAR     = /asl/packages/kcarta118.tar
KTARBUG  = /asl/packages/kcarta_bugfix118.tar
KTARBUGGIVEOUT  = /asl/packages/kcarta_bugfix_giveout118.tar
KGIVEOUT = /asl/packages/kcartagiveout118.tar
KDATA    = /asl/packages/kcartaDATA.tar
KMATLAB  = /asl/packages/kcartaMATLAB.tar
KCWRAP   = /asl/packages/kcwrap.tar
KFTP     = /asl/packages/kcarta
KTARAUX  = /asl/packages/kcarta/kcarta_aux.tar 

PARAMS = ../INCLUDE/kcarta.param ../INCLUDE/pre_defined.param Makefile

PARAMS_RTP = ../INCLUDE/kcarta.param ../INCLUDE/pre_defined.param Makefile

###### OBJSMAIN_PARALLEL  for all features : jacobians, scatter, flux, but as stand alone JPL exec
###### OBJSMAIN_JPL       for all features : jacobians, scatter, flux, but as stand alone JPL exec
###### OBJSMAIN           for all features : jacobians, scatter, flux
###### OBJSMAIN_BASIC     for none of kCARTA features

OBJSMAIN          = kcartamain.o        kcartamisc.o    spline_and_sort.o  freqfile.o
OBJSMAIN_JPL      = kcartajpl.o         kcartamisc.o    spline_and_sort.o  freqfile.o
OBJSMAIN_BASIC    = kcartabasic.o       kcartamisc.o    spline_and_sort.o  freqfile.o
OBJSMAIN_PARALLEL = kcartaparallel.o    kcartamisc.o    spline_and_sort.o  freqfile.o

OBJSRTP        = n_main.o rtp_interface.o

OBJSSTRING     = s_writefile.o       s_misc.o                           \
                 n_gas_wt_spectra.o  n_pth_mix.o      n_rad_jac_scat.o  \
                 n_output.o          n_layers.o       
 
OBS_LTE_OPTDPH  = kcoeffMAIN.o       kcoeffSPL.o        kcoeffSPLJAC.o\
                  kcont_xsec.o       kcoeff_FAST.o \
                  kcoeff_FAST_details.o      kcoeff_FAST_details2.o

OBS_NLTE_OPTDPH = knonlte.o          klineshapes.o      kvoigt_cousin.o\
                  klinemix.o         kreadVTprofiles.o  kbloat.o\
                  kcousin.o          kpredictVT.o

###########################################################################
### note that we eventually use lookup tables generated from Matlab     ###
###                   for the continuum                                 ###
### depending on the database used, set up the OBJSCON to indicate      ###
### which water continnum type to use. We generated our latest version  ###
### of our kCompressed database assuming the CKD lineshape, so this     ###
### pretty much meas use OBJSCON_WB!!!                                  ###
###                                                                     ###
### so the below codes have been moved to CONTINUUM_BLOCKDATA           ###
### especially since they relate to older continuum versions            ###
###                                                                     ###
###  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ###

####### since we are using new kCARTA database, use this version
####### to use CKD as originally defined (wb === without basement term!!!)
####### with the water lineshape = lorentz-lorentz(25)
####### this code has the smooth 10cm-1 self interpolation for CKD2.3+
OBJSCON_WB = calcon.o h2oft0_wb.o h2ost0_wb.o h2ost1_wb.o \
          calconCKD2.4.o calconCKD2.4.data.o

####### if using the 1996-1999 kCARTA database, use this version
####### to use CKD as used by older kCARTA versions (defined by GENLN2)
####### with the water lineshape = lorentz
OBJSCON_OLD_GENLN2 = calcon.o h2oft0.o h2ost0.o h2ost1.o \
          calconCKD2.4.o calconCKD2.4.data.o

## choose one of the above two
OBJSCON = $(OBJSCON_WB)

### compressed lookup tables will also eventually make xsec irrelevant ###
OBJSXSEC     = calxsc.o calq.o 
#######################################################################

OBSRAD       = rad_main.o rad_diff.o  rad_quad.o rad_misc.o rad_flux.o \
               rad_limb.o rad_angles.o rad_vis_uv.o

OBSRAD_BASIC = rad_main.o rad_diff.o  rad_quad.o rad_misc.o rad_flux.o \
               rad_limb.o rad_angles.o rad_vis_uv.o

OBSJAC_CLR   = jac_main.o jac_up.o jac_down.o jac_limb.o

OBSJAC_CLD   = jac_main.o jac_up.o jac_down.o jac_limb.o \
               jac_pclsam_up.o jac_pclsam_down.o singlescatter.o

##########################################################################
###   this is to set up your favorite scattering routine package       ###
########## these are codes that have been tested                   #######
###   TWOSTREAM : using twostream with a solar beam                    ###
###   RTSPEC    : fast but does not include solar beam                 ###
###   DISORT    : slow, computes the whole kit and caboodle            ###
########## these are codes that have not been tested yet           #######
###   PERTURB   : zeroth + first order solutions to scattering eqn     ###
###   PCLSAM    : param cloud lw scattering for atmopspheric modelling ###
############################################################################
## set up the appropriate scattering packages                             ##
## NOTE 1) kcarta.x can include one or more of DISORT (slow, with solar), ##
##         RTSPEC (fast, no solar), TWOSTREAM (fast, with solar, less     ##
##         accurate), PERTURB (zeroth + first order solution) ,           ##
##         PCLSAM (fast with solar)
##      2) bkcarta only has clear sky radiances, fluxes, jacobians        ##
############################################################################

PARAMS_SCAT = ../INCLUDE/kcarta.param ../INCLUDE/scatter.param \
	      ../INCLUDE/pre_defined.param ../INCLUDE/gauss.param Makefile

OBSSCAT_COMMON    = clear_scatter_misc.o

OBSSCAT_TWOSTR = scatter_twostream_main.o scatter_twostream_guts.o \
		 scatter_twostream_code.o scatter_twostream_flux.o 
 
OBSSCAT_RTSPEC = scatter_rtspec_main.o scatter_rtspec_code.o \
                 scatter_rtspec_flux.o

OBSSCAT_DISORT = scatter_disort_main.o scatter_disort_code.o \
                 scatter_disort_flux.o scatter_disort_misc.o

OBSSCAT_PERTURB = scatter_perturb_main.o scatter_perturb_code.o

OBSSCAT_RAYLEIGH = scatter_rayleigh_main.o scatter_rayleigh_code.o
 
OBSSCAT_GRAYCLD = scatter_graycld_main.o scatter_graycld_code.o

OBSSCAT_PCLSAM  = scatter_pclsam_main.o \
		 scatter_pclsam_code.o scatter_pclsam_flux.o 

OBSSCAT_TWO  = $(OBSSCAT_TWOSTR)   $(OBSSCAT_COMMON) scatter_interface.o
OBSSCAT_RTS  = $(OBSSCAT_RTSPEC)   $(OBSSCAT_COMMON) scatter_interface.o
OBSSCAT_DIS  = $(OBSSCAT_DISORT)   $(OBSSCAT_COMMON) scatter_interface.o
OBSSCAT_ONE  = $(OBSSCAT_PERTURB)  $(OBSSCAT_COMMON) scatter_interface.o
OBSSCAT_RAY  = $(OBSSCAT_RAYLEIGH) $(OBSSCAT_COMMON) scatter_interface.o
OBSSCAT_GRAY = $(OBSSCAT_GRAYCLD)  $(OBSSCAT_COMMON) scatter_interface.o
OBSSCAT_PCL  = $(OBSSCAT_PCLSAM)   $(OBSSCAT_COMMON) scatter_interface.o

#OBSSCAT5 = $(OBSSCAT_DISORT)   $(OBSSCAT_RTSPEC)    $(OBSSCAT_TWOSTR) \
#           $(OBSSCAT_PERTURB)  $(OBSSCAT_PCLSAM)    $(OBSSCAT_COMMON) \
#           $(OBSSCAT_RAYLEIGH) $(OBSSCAT_GRAYCLD)    scatter_interface.o
OBSSCAT5 = $(OBSSCAT_RTSPEC)    \
           $(OBSSCAT_PCLSAM)    $(OBSSCAT_COMMON) \
           $(OBSSCAT_GRAYCLD)    scatter_interface.o

### for COMPLETE kcarta package (kcarta.x) choose one of the above 5 options
###
### SCATTER_ALL = OBSSCAT5
### default is to turn on ALL scattering packages (DISORT,RTSPEC,TWOSTREAM)
### in addition, you get clear sky radiance, jacobian, flux code compiled
SCATTER_ALL = $(OBSSCAT5)

### have removed $(OBJSCON) and $(OBJSXSEC) from OBJS,OBJSBASIC 
OBJS = $(SCATTER_ALL) $(OBJSMAIN) $(OBS_LTE_OPTDPH) $(OBS_NLTE_OPTDPH) \
       $(OBSRAD) $(OBSJAC_CLD) $(OBJSSTRING) 

### have removed $(OBJSCON) and $(OBJSXSEC) from OBJS,OBJSBASIC 
OBJSPARALLEL = $(SCATTER_ALL) $(OBJSMAIN_PARALLEL) $(OBS_LTE_OPTDPH) $(OBS_NLTE_OPTDPH) \
       $(OBSRAD) $(OBSJAC_CLD) $(OBJSSTRING) 

### have removed $(OBJSCON) and $(OBJSXSEC) from OBJS,OBJSBASIC 
OBJSJPL = $(OBJSMAIN_JPL) $(OBS_LTE_OPTDPH) $(OBS_NLTE_OPTDPH) \
          $(OBSRAD_BASIC) $(OBSSCAT_COMMON) $(OBSJAC_CLD) $(OBJSSTRING) 

### for BASIC clear sky package (bkcarta.x), here we are!!!!!!!!
OBJSBASIC = $(OBJSMAIN_BASIC) $(OBS_LTE_OPTDPH) $(OBS_NLTE_OPTDPH) \
             $(OBSRAD_BASIC) $(OBSSCAT_COMMON) $(OBSJAC_CLR) $(OBJSSTRING) \
             
OBJS_TXT = n_mainTXT.o


########################################################################
################## MAIN PART OF MAKEFILE ###############################
########################################################################
# executables live in ../BIN; note you need to set the DISTDIR
DISTDIR    = /asl/data/kcarta
DISTDIRGEN = /asl/data/kcarta_sergio

## this just updates the cource code
#EXECS = basic scat basicTXT scatTXT
EXECS = basic basicTXT

## this updates the source code AND the distribution
## for now, default to 385 ppmv CO2
EXECSDIST = datafix385 basic 

all : $(EXECS)
alldist : $(EXECSDIST)

datafix400:
	sed -e 's|\#|$(DISTDIR)|g' ../INCLUDE/kcartaV118_400.param > \
      ../INCLUDE/kcarta_v118.param; \
      rm ../INCLUDE/kcarta.param; \
      cd ../INCLUDE; \
      ln -s kcarta_v118.param kcarta.param; \
      cd EARTH_database_params; \
      lner_EARTH_database_params.sc ;\
      cd ../; \
      cd ../SRCv1.18

datafix385_H2012:
	sed -e 's|\#|$(DISTDIR)|g' -e 's|\^|$(DISTDIRGEN)|g' ../INCLUDE/kcartaV118_385_H2012.param > \
      ../INCLUDE/kcarta_v118.param; \
      rm ../INCLUDE/kcarta.param; \
      cd ../INCLUDE; \
      ln -s kcarta_v118.param kcarta.param; \
      cd EARTH_database_params; \
      lner_EARTH_database_params.sc ;\
      cd ../; \
      cd ../SRCv1.18

## this is "simple file" with hardly any comments
datafix385_H2012_IR_ONLY:
	sed -e 's|\#|$(DISTDIR)|g' -e 's|\^|$(DISTDIRGEN)|g'  ../INCLUDE/kcartaV118_385_H2012_IR_ONLY.param > \
      ../INCLUDE/kcarta_v118.param; \
      rm ../INCLUDE/kcarta.param; \
      cd ../INCLUDE; \
      ln -s kcarta_v118.param kcarta.param; \
      cd EARTH_database_params; \
      lner_EARTH_database_params.sc ;\
      cd ../; \
      cd ../SRCv1.18

datafix385_H2012_hartmann_co2:
	sed -e 's|\#|$(DISTDIR)|g' ../INCLUDE/kcartaV118_385_H2012_hartmann.param > \
      ../INCLUDE/kcarta_v118.param; \
      rm ../INCLUDE/kcarta.param; \
      cd ../INCLUDE; \
      ln -s kcarta_v118.param kcarta.param; \
      cd EARTH_database_params; \
      lner_EARTH_database_params.sc ;\
      cd ../; \
      cd ../SRCv1.18

## this is "simple file" with hardly any comments
datafix385_H2008_IR_ONLY:
	sed -e 's|\#|$(DISTDIR)|g' -e 's|\^|$(DISTDIRGEN)|g' ../INCLUDE/kcartaV118_385_H2008_IR_ONLY.param > \
      ../INCLUDE/kcarta_v118.param; \
      rm ../INCLUDE/kcarta.param; \
      cd ../INCLUDE; \
      ln -s kcarta_v118.param kcarta.param; \
      cd EARTH_database_params; \
      lner_EARTH_database_params.sc ;\
      cd ../; \
      cd ../SRCv1.18

datafix385_H2008:
	sed -e 's|\#|$(DISTDIR)|g' -e 's|\^|$(DISTDIRGEN)|g' ../INCLUDE/kcartaV118_385_H2008.param > \
      ../INCLUDE/kcarta_v118.param; \
      rm ../INCLUDE/kcarta.param; \
      cd ../INCLUDE; \
      ln -s kcarta_v118.param kcarta.param; \
      cd EARTH_database_params; \
      lner_EARTH_database_params.sc ;\
      cd ../; \
      cd ../SRCv1.18

datafix370_H2000:
	sed -e 's|\#|$(DISTDIR)|g' ../INCLUDE/kcartaV118_370_H2000.param > \
      ../INCLUDE/kcarta_v118.param; \
      rm ../INCLUDE/kcarta.param; \
      cd ../INCLUDE; \
      ln -s kcarta_v118.param kcarta.param; \
      cd EARTH_database_params; \
      lner_EARTH_database_params.sc ;\
      cd ../; \
      cd ../SRCv1.18

############## the five executables ##################################
##### (1) complete kcarta (memory hog) with jacobians, all scattering codes
scat: kcarta.x
	mv kcarta.x ../BIN/kcarta.x

kcarta.x : $(OBJS) $(OBJSRTP)
	$(FORTRANX) -o kcarta.x $(FLAGS) $(OBJS) $(OBJSRTP) $(LIBS) $(RTPLIB) $(HDFLIB)

kcartamain.o : kcartamain.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartamain.f

##### (2) basic kcarta (easy on memory) with no jacobs, fluxes or scattering
basic: bkcarta.x
	mv bkcarta.x ../BIN/bkcarta.x

bkcarta.x : $(OBJSBASIC) $(OBJSRTP)
	$(FORTRANX) -o bkcarta.x $(FLAGS) $(OBJSBASIC) $(OBJSRTP) $(LIBS) $(RTPLIB) $(HDFLIB) 

kcartabasic.o : kcartabasic.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartabasic.f

##### (3) complete kcarta (memory hog) with jacobians, all scattering codes, TEXT levels/layers input
scatTXT: kcartaTXT.x
	mv kcartaTXT.x ../BIN/kcartaTXT.x

kcartaTXT.x : $(OBJS) $(OBJS_TXT)
	$(FORTRANX) -o kcartaTXT.x $(FLAGS) $(OBJS) $(OBJS_TXT) $(LIBS)

kcartamainTXT.o : kcartamain.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartamain.f

##### (4) basic kcarta (easy on memory) with no jacobs, fluxes or scattering, TEXT levels/layers input
basicTXT: bkcartaTXT.x
	mv bkcartaTXT.x ../BIN/bkcartaTXT.x

bkcartaTXT.x : $(OBJSBASIC) $(OBJS_TXT)
	$(FORTRANX) -o bkcartaTXT.x $(FLAGS) $(OBJSBASIC) $(OBJS_TXT) $(LIBS)

kcartabasicTXT.o : kcartabasic.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartabasic.f

#### kcartachunk.x no longer supported
##### (5) complete kcarta (memory hog) with jacobians, all scattering codes; chunk by chunk
##### not worth it since we can put separate profiles per processor, just as easily

##### (5) complete kcarta (memory hog) with jacobians, [all scattering codes], but as standalone
jpl: jpl.x
	mv jpl.x ../BIN/jpl.x

jpl.x : $(OBJSJPL) $(OBJSRTP)
	$(FORTRANX) -o jpl.x $(FLAGS) $(OBJSJPL) $(OBJSRTP) $(LIBS) $(RTPLIB) $(HDFLIB)

kcartajpl.o : kcartajpl.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartajpl.f

##### (6) complete kcarta (memory hog) with jacobians, a[ll scattering codes], but as standalone
#####  TEXT levels/layers input
jplTXT: jplTXT.x
	mv jplTXT.x ../BIN/jplTXT.x

jplTXT.x : $(OBJSJPL) $(OBJS_TXT)
	$(FORTRANX) -o jplTXT.x $(FLAGS) $(OBJSJPL) $(LIBS) $(RTPLIB) $(HDFLIB) $(OBJS_TXT)

kcartajplTXT.o : kcartajpl.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartajpl.f

##### (7) complete kcarta (memory hog) with jacobians, all scattering codes
parallel: kcartaparallel.x
	mv kcartaparallel.x ../BIN/kcartaparallel.x

kcartaparallel.x : $(OBJSPARALLEL) $(OBJSRTP)
	$(FORTRANX) -o kcartaparallel.x $(FLAGS) $(OBJSPARALLEL) $(OBJSRTP) $(LIBS) $(RTPLIB) $(HDFLIB)

kcartaparallel.o : kcartaparallel.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartaparallel.f

################ OPTICAL DEPTHS (LTE and NLTE) ###########################
###### lte routines
kcartamisc.o : kcartamisc.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcartamisc.f

spline_and_sort.o : spline_and_sort.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) spline_and_sort.f

freqfile.o : freqfile.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) freqfile.f

### kCompressed Database uncompression routines, continuum and
### old xsec routines
kcoeffMAIN.o : kcoeffMAIN.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcoeffMAIN.f

kcont_xsec.o : kcont_xsec.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcont_xsec.f

kcoeffSPL.o : kcoeffSPL.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcoeffSPL.f

kcoeffSPLJAC.o : kcoeffSPLJAC.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcoeffSPLJAC.f

kcoeff_FAST.o : kcoeff_FAST.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcoeff_FAST.f

kcoeff_FAST_details.o : kcoeff_FAST_details.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcoeff_FAST_details.f

kcoeff_FAST_details2.o : kcoeff_FAST_details2.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcoeff_FAST_details2.f

##### nonlte routines
knonlte.o : knonlte.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) knonlte.f

kbloat.o : kbloat.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kbloat.f

klineshapes.o : klineshapes.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) klineshapes.f

kreadVTprofiles.o : kreadVTprofiles.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kreadVTprofiles.f

kpredictVT.o : kpredictVT.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kpredictVT.f

kcousin.o : kcousin.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kcousin.f

kvoigt_cousin.o : kvoigt_cousin.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) kvoigt_cousin.f

klinemix.o : klinemix.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) klinemix.f

###########  NON SCATTERING RADIATIVE TRANSFER CODE ######################
rad_main.o : rad_main.f $(PARAMS) 
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_main.f

rad_limb.o : rad_limb.f $(PARAMS) 
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_limb.f

rad_vis_uv.o : rad_vis_uv.f $(PARAMS) 
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_vis_uv.f

rad_misc.o : rad_misc.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_misc.f

rad_angles.o : rad_angles.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_angles.f

rad_diff.o : rad_diff.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_diff.f

rad_quad.o : rad_quad.f $(PARAMS) ../INCLUDE/gauss.param
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_quad.f

rad_flux.o : rad_flux.f $(PARAMS) ../INCLUDE/gauss.param
	$(FORTRANX) -c $(FLAGS) $(UFLAG) rad_flux.f

###########  SCATTERING RADIATIVE TRANSFER CODE ###########################
#### many of the routines in here are common to all scattering codes 
clear_scatter_misc.o : clear_scatter_misc.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) clear_scatter_misc.f 

singlescatter.o : singlescatter.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) singlescatter.f 

#### this is the inteface to all scattering codes 
scatter_interface.o : scatter_interface.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_interface.f 

### this is Sergio Machado's kTwoStream (+solar) radtransfer code 
scatter_twostream_main.o : scatter_twostream_main.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_twostream_main.f 
 
scatter_twostream_code.o : scatter_twostream_code.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_twostream_code.f 
 
scatter_twostream_guts.o : scatter_twostream_guts.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) $(FDOUBLE) scatter_twostream_guts.f 
 
scatter_twostream_flux.o : scatter_twostream_flux.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_twostream_flux.f 
 
#### this is Frank Evans RTSPEC
scatter_rtspec_main.o : scatter_rtspec_main.f  $(PARAMS_SCAT) 
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_rtspec_main.f

scatter_rtspec_code.o : scatter_rtspec_code.f  $(PARAMS_SCAT) 
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_rtspec_code.f

scatter_rtspec_flux.o : scatter_rtspec_flux.f $(PARAMS_SCAT)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_rtspec_flux.f

#### this is Kurt Stamnes DISORT
scatter_disort_main.o : scatter_disort_main.f  $(PARAMS_SCAT) 
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_disort_main.f

scatter_disort_flux.o : scatter_disort_flux.f  $(PARAMS_SCAT) 
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_disort_flux.f

scatter_disort_code.o : scatter_disort_code.f  $(PARAMS_SCAT) 
	$(FORTRANX) -c $(FLAGS) $(FDOUBLE) $(UFLAG) scatter_disort_code.f

scatter_disort_misc.o : scatter_disort_misc.f  $(PARAMS_SCAT) 
	$(FORTRANX) -c $(FLAGS) $(FDOUBLE) $(UFLAG) scatter_disort_misc.f

### this is essentially Scott Hannon black/gray cloud
scatter_graycld_main.o : scatter_graycld_main.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_graycld_main.f 
 
scatter_graycld_code.o : scatter_graycld_code.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_graycld_code.f 

### this is simple Rayleigh scattering for nir/vis/uv
scatter_rayleigh_main.o : scatter_rayleigh_main.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_rayleigh_main.f 
 
scatter_rayleigh_code.o : scatter_rayleigh_code.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_rayleigh_code.f 
 
### this is Sergio Machado's kPerturb (no solar) radtransfer code 
scatter_perturb_main.o : scatter_perturb_main.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_perturb_main.f 
 
scatter_perturb_code.o : scatter_perturb_code.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_perturb_code.f 
 
#scatter_perturb_flux.o : scatter_perturb_flux.f  $(PARAMS_SCAT)  
#	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_perturb_flux.f 
 
### this is Chou, Lee, Tsay, Fu's PCLSAM radtransfer code 
scatter_pclsam_main.o : scatter_pclsam_main.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_pclsam_main.f 
 
scatter_pclsam_code.o : scatter_pclsam_code.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_pclsam_code.f 
 
scatter_pclsam_flux.o : scatter_pclsam_flux.f  $(PARAMS_SCAT)  
	$(FORTRANX) -c $(FLAGS) $(UFLAG) scatter_pclsam_flux.f 
 
########################## Jacobian code ################################
jac_main.o : jac_main.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) jac_main.f

jac_up.o : jac_up.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) jac_up.f

jac_down.o : jac_down.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) jac_down.f

jac_limb.o : jac_limb.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) jac_limb.f

jac_pclsam_up.o : jac_pclsam_up.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) jac_pclsam_up.f

jac_pclsam_down.o : jac_pclsam_down.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) jac_pclsam_down.f

############################## misc and I/O routines #####################
s_writefile.o : s_writefile.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) s_writefile.f

s_misc.o : s_misc.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) s_misc.f

n_main.o : n_main.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) n_main.f

n_mainTXT.o : n_mainTXT.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) n_mainTXT.f

n_pth_mix.o : n_pth_mix.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) n_pth_mix.f

n_layers.o : n_layers.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) n_layers.f

n_gas_wt_spectra.o : n_gas_wt_spectra.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) n_gas_wt_spectra.f

n_rad_jac_scat.o : n_rad_jac_scat.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) n_rad_jac_scat.f

n_output.o : n_output.f $(PARAMS)
	$(FORTRANX) -c $(FLAGS) $(UFLAG) n_output.f

rtp_interface.o : rtp_interface.f $(PARAMS_RTP) $(RTPDEFS_FILE)
	$(FORTRANX) -c $(RTPINC) $(FLAGS) $(UFLAG) rtp_interface.f

################# (OLDER) CON AND XSEC stuff #############################
#calcon.o: calcon.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) $(UFLAG) calcon.f

#calconCKD2.4.o: calconCKD2.4.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) $(UFLAG) calconCKD2.4.f

#calconCKD2.4.data.o: calconCKD2.4.data.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) calconCKD2.4.data.f

####this is for the correct CKD defn
#h2oft0_wb.o: h2oft0_wb.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) h2oft0_wb.f

#h2ost0_wb.o: h2ost0_wb.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) h2ost0_wb.f

#h2ost1_wb.o: h2ost1_wb.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) h2ost1_wb.f

#####this is for the GENLN2 versions
#h2oft0.o: h2oft0.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) h2oft0.f

#h2ost0.o: h2ost0.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) h2ost0.f

#h2ost1.o: h2ost1.f $(PARAMS)
#	$(FORTRANX) -c $(FLAGS) h2ost1.f

#### this is if kCompressed Database DOES NOT EXIST for gasID 51-63
#calq.o: calq.f $(PARAMS) 
#	$(FORTRANX) -c $(FLAGS) calq.f 

#calxsc.o: calxsc.f $(PARAMS) 
#	$(FORTRANX) -c $(FLAGS) $(UFLAG) calxsc.f 

clean: 
	rm *.o *~ 2> /dev/null || true

################### DISTRIBUTIONS ########################################
#### 1) to make the distributions, go to /home/sergio and look for kcartaV1xx
#### 2) since all the KCARTA directories are under kcartaV1xx, rename this to 
####    kcartaV118 eg               mv kcartaV110 kcartaV118
#### 3) rm old sybolic link         rm KCARTA 
#### 4) make new symbolic link      ln -s  kcartaV118 KCARTA 
#### 5) cd to this dir              cd KCARTA
#### 6) rm old symbolic link SRC    rm SRC
#### 7) make new symbolic link SRC  ln -s SRCv1.18 SRC
#### 8) cd to this dir              cd SRC 
#### 9) make whatever distribution you want! eg make dist 

#### (A) : this has ALL the source code 
####       clear sky rad transfer, clear sky jacobians, scatter, nlte and
####       the nlte profiles
dist:
	cd ../.. ;				\
	rm $(KTAR) 2> /dev/null || true;	\
	tar -cf $(KTAR)				\
		kcartaV118/BIN/kcarta.x		\
		kcartaV118/BIN/bkcarta.x	\
		kcartaV118/LIB                  \
		kcartaV118/INCLUDE 		\
		kcartaV118/SCATTERCODE          \
		kcartaV118/DOC			\
		kcartaV118/MATLAB		\
		kcartaV118/README.1ST		\
		kcartaV118/SCRIPTS		\
		kcartaV118/SRCv1.18/*.f         \
		kcartaV118/SRCv1.18/Makefile    \
		/asl/data/kcarta/KCARTADATA/NLTE/UA/*.m          \
		/asl/data/kcarta/KCARTADATA/NLTE/USUALLAYERS/*.m \
		kcartaV118/UTILITY;		\
	chmod 664 $(KTAR)

bugfix:
	cd ../.. ;				\
	rm $(KTARBUG) 2> /dev/null || true;	\
	tar -cf $(KTARBUG)			\
		kcartaV118/README.1ST		\
		kcartaV118/INCLUDE		\
		kcartaV118/DOC/kcarta1.18*	\
		kcartaV118/SRCv1.18/Makefile    \
		/asl/data/kcarta/KCARTADATA/NLTE/UA/*.m          \
		/asl/data/kcarta/KCARTADATA/NLTE/USUALLAYERS/*.m \
		kcartaV118/SRCv1.18/*.f;        \
	chmod 664 $(KTARBUG)

##############################
#### (B) this is the MATLAB directory, for reading in binary kCARTA output
matlab:
	cd ../.. ;				\
	rm $(KMATLAB) 2> /dev/null || true;     \
	tar -cf $(KMATLAB)			\
		kcartaV118/MATLAB;		\
	chmod 664 $(KMATLAB)

data:
	cd ../.. ;				\
	rm $(KDATA) 2> /dev/null || true;	\
	tar -cf $(KDATA)			\
		/asl/data/kcarta/KCARTADATA;	\
	chmod 664 $(KDATA)

##############################
### (C) this is the very useful wrapper that Howard Motteler wrote
###     the main version would be in /home/motteler/radtrans/kcwrap/kcwrap
###     some copies would exist in the KCARTA/SCRIPTS directory
kcwrap:
	cd ../.. ;				\
	rm $(KCWRAP) 2> /dev/null || true;	\
	tar -cf $(KCWRAP)			\
		/asl/matlab/rtptools		\
		/asl/matlab/h4tools		\
		/asl/matlab/sconv		\
		/asl/data/airs/srf/srftables_m135_fringes_nov02.hdf \
		/asl/data/airs/srf/srftables_m135_fringes_nov02.hdf \
		kcartaV118/SCRIPTS;		\
	chmod 664 $(KCWRAP)

ftp: $(KTAR)
	scp $(KTAR) $(KFTP)

##############################
#### (D) these are the basic files we give out : 
####     clear sky radtransfer and jacobians, as well as nlte source code

#these are the files for the basic kCARTA package
# the c* and h* files have been moved to OLD_CONT_BLOCKDATA_AND_XSEC
#   as they are no longer needed
#kc1 = j*.f kcarta*.f kcoeff*.f n*.f \
#      r*.f s_*.f  INCLUDE/*.param Makefile

giveout:
	cd ../.. ;				\
	rm $(KGIVEOUT) 2> /dev/null || true;	\
	tar -cf $(KGIVEOUT)			\
		kcartaV118/BIN/kcarta.x		\
		kcartaV118/BIN/bkcarta.x	\
		kcartaV118/LIB                  \
		kcartaV118/INCLUDE 		\
		kcartaV118/DOC			\
		kcartaV118/MATLAB		\
		kcartaV118/README.1ST		\
		kcartaV118/SCRIPTS		\
                kcartaV118/INCLUDE/*.param      \
                kcartaV118/SRCv1.18/freqfile.f  \
                kcartaV118/SRCv1.18/j*.f        \
                kcartaV118/SRCv1.18/k*.f        \
                kcartaV118/SRCv1.18/n*.f        \
                kcartaV118/SRCv1.18/r*.f        \
                kcartaV118/SRCv1.18/s_*.f       \
                kcartaV118/SRCv1.18/spline_*.f  \
                kcartaV118/SRCv1.18/clear_scatter_misc.f  \
                kcartaV118/SRCv1.18/singlescatter.f       \
                kcartaV118/SRCv1.18/Makefile    \
		kcartaV118/UTILITY;		\
	chmod 664 $(KGIVEOUT)

giveout_bugfix:
	cd ../.. ;				         \
	rm $(KTARBUGGIVEOUT) 2> /dev/null || true;	 \
	tar -cf $(KTARBUGGIVEOUT)			 \
		kcartaV118/README.1ST		         \
		kcartaV118/INCLUDE		         \
		kcartaV118/DOC/kcarta1.18*	         \
		kcartaV118/SRCv1.18/Makefile             \
                kcartaV118/SRCv1.18/freqfile.f           \
                kcartaV118/SRCv1.18/j*.f                 \
                kcartaV118/SRCv1.18/k*.f                 \
                kcartaV118/SRCv1.18/n*.f                 \
                kcartaV118/SRCv1.18/r*.f                 \
                kcartaV118/SRCv1.18/s_*.f                \
                kcartaV118/SRCv1.18/spline_*.f           \
                kcartaV118/SRCv1.18/clear_scatter_misc.f \
                kcartaV118/SRCv1.18/singlescatter.f      \
                kcartaV118/SRCv1.18/Makefile;            \
	chmod 664 $(KTARBUGGIVEOUT)

giveout_aux:
	cd ../.. ;                              \
	rm $(KTARAUX) 2> /dev/null || true;     \
	tar -cf $(KTARAUX)                      \
		kcartaV118/INCLUDE                  \
		kcartaV118/TEST/R*		     \
		kcartaV118/TEST/b*                  \
		kcartaV118/TEST/t*                  \
		kcartaV118/TEST/*.m                 \
		kcartaV118/TEST/*.sc                \
		kcartaV118/TEST/COMPARISON_v1.18    \
		kcartaV118/DOC                  \
		kcartaV118/MATLAB               \
		kcartaV118/README.1ST           \
		kcartaV118/SCRIPTS              \
		kcartaV118/INCLUDE/*.param      \
		kcartaV118/INCLUDE/*.m          \
		kcartaV118/UTILITY;             \
	chmod 664 $(KTARAUX) 

################### DISTRIBUTIONS ########################################
