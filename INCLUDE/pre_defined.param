c this include file has parameters to compile kcartamain.f, kcartabasic.f
c using this file, parameters can be set in kcarta.param 
c DO NOT EDIT this file!!!!!!!

c************************************************************************
c************* PRE DEFINED PARAMETERS!! DO NOT TOUCH!! ****************** 
c************************************************************************
c this sets the version number
c note that the first four characters HAVE to be vx.xx for readers to work
      CHARACTER*80 caVersion
      !!!!info : caVersion='vX.XX YY-MM-DD COMMENT')
      !!!PARAMETER (caVersion='v1.10 02-01-30 updates')
      !!!PARAMETER (caVersion='v1.11 02-10-06 updates')
      !!!PARAMETER (caVersion='v1.11 12-31-05 nlte,pclasm updates')
      !!!PARAMETER (caVersion='v1.12 01-14-06 first version')
      !!!PARAMETER (caVersion='v1.14 01-19-07 first version')
      !!!PARAMETER (caVersion='v1.14 12-10-07 newdatabase version')
      PARAMETER (caVersion='v1.15+ 08-01-10 newdatabase version')

c this sets the name of the file to which warnings/happy messages are logged to
c this file is set by default to 'warning.msg' in n_main.f; however the user
c can reset the name in the *OUTPUT section, as this would be a new parameter
      CHARACTER*80 kWarnFile
      COMMON/ComWarnLog/kWarnFile

c When RTP profiles are used, need to keep track of which is the lowest and
c highest layer, or highest and lowest pressure, that can be used 
c also kRTP = -10 or -20 gives user specified input such as 
c   SurfPress/SurfTemp/SurfHgt/ViewHgt/ViewAngle so we need to override user nm_rad
c with these correct values
      INTEGER kRTPBot,kRTPTop
      REAL kRTP_pBot,kRTP_pTop,raRTP_TxtInput(10)
      COMMON/ComRTP1/kRTPBot,kRTPTop,raRTP_TxtInput
      COMMON/ComRTP2/kRTP_pBot,kRTP_pTop

c this is the parameter DELTA that tells how close view pressure rP is to a 
c pressure level
      REAL delta
      PARAMETER(delta = 1.0e-9)
c this are parameters added on to make sure the NLTE code is working
      REAL rDeltaNLTE
      PARAMETER(rDeltaNLTE = 1.0e-15)
      DOUBLE PRECISION dDeltaNLTE
      PARAMETER(dDeltaNLTE = 1.0d-15)

c this is number of channels to do things for, after reading in the RTP
      INTEGER kChan
      PARAMETER (kChan=2400)

c this is to set the number of zenith angles to do angular integration
c when determining fluxes and/or background thermal
      INTEGER kGauss 
      PARAMETER (kGauss=40) 
      DOUBLE PRECISION daGaussPt(kGauss),daGaussWt(kGauss) 

c these set driver file input,kcarta std output, jacobian file unit numbers
c that are used at run time; assignements done at beginning of run
      INTEGER    kStdDriver, kStdkCarta, kStdJacob, kStdJacob2
c this sets the file error and warning file unit numbers
c
ccc
c NOTE that kstdErr = 0 is a DEFAULT see eg
c    http://www.amath.unc.edu/sysadmin/DOC4.0/fortran/prog_guide/2_io.doc.html
c    http://docs.oracle.com/cd/E19957-01/805-4940/z40008ff1d60/index.html
c DO NOT TRY to assign 5 (input) 6 (output) as these are also PRECONNECTED UNITS
cccc
      INTEGER    kStdErr,  kStdWarn
      PARAMETER (kStdErr=0,kStdWarn=1)
c if the user wants actual files, instead of STDIN,STDOUT,
c these set driver file input,kcarta std output, jacobian file unit numbers
      INTEGER    kStdDriverKK,  kStdkCartaKK,   kStdJacobKK,    
     $           kStdJacob2KK
      PARAMETER (kStdDriverKK=9,kStdkCartaKK=10,kStdJacobKK=11,
     $           kStdJacob2KK=25)
c this sets the compressed/cross sectional database, profile unit number
      INTEGER    kCompUnit,   kProfileUnit
      PARAMETER (kCompUnit=12,kProfileUnit=13)
c this sets the temp data file unit number
      INTEGER    kTempUnit
      PARAMETER (kTempUnit=14)
c these set the flux unit file
      INTEGER    kStdFlux
      PARAMETER (kStdFlux=17)
c these set the 0.0025 cm-1 NLTE planck unit file, as well as the
c bloated NLTE files for workspace, and for output
      INTEGER    kStdPlanck,   kBloatNLTEPlanck,   kBloatNLTEOut 
      PARAMETER (kStdPlanck=18,kBloatNLTEPlanck=19,kBloatNLTEOut=20)
c these set the 0.0025 cm-1 upper atm files
      INTEGER    kStdPlanckUA,   kNLTEOutUA
      PARAMETER (kStdPlanckUA=21,kNLTEOutUA=22)
c these set the 0.0005 cm-1 upper atm files
      INTEGER    kBloatPlanckUA,   kBloatNLTEOutUA
      PARAMETER (kBloatPlanckUA=23,kBloatNLTEOutUA=24)

c these are common blocked integers that say whether or not the unit is open
      INTEGER kStdErrOpen,kStdWarnOpen,kStdkCartaOpen
      INTEGER kStdJacobOpen,kStdJacob2Open
      INTEGER kStdDriverOpen,kCompUnitOpen,kProfileUnitOpen,
     $        kTempUnitOpen,kStdFluxOpen,kStdPlanckOpen
      INTEGER kBloatPlanckOpen,kBloatOutOpen
      INTEGER kStdPlanckUAOpen,kNLTEOutUAOpen
      INTEGER kBloatPlanckUAOpen,kBloatNLTEOutUAOpen
      COMMON/OB0/kStdDriver,kStdkCarta,kStdJacob,kStdJacob2
      COMMON/OB1/kStdErrOpen,kStdWarnOpen,kStdkCartaOpen,
     $           kStdJacobOpen,kStdJacob2Open,
     $           kStdDriverOpen,kStdFluxOpen,kStdPlanckOpen
      COMMON/OB2/kCompUnitOpen,kProfileUnitOpen,kTempUnitOpen
      COMMON/OB3/kBloatPlanckOpen,kBloatOutOpen
      COMMON/OB4/kStdPlanckUAOpen,kNLTEOutUAOpen,kBloatPlanckUAOpen,
     $           kBloatNLTEOutUAOpen

c kMaxUserSet == number of variables the user can change w/o recompiling
c set in setparam.param 
      INTEGER kMaxUserSet
      PARAMETER (kMaxUserSet=12)
c these next kMaxUserSet variables are set in setparam.param 
c note there is space for 12 variables but only 10 are being used right now
c *** note kPlanckOut set in s_writefile.f  ie right now, it is NOT an option
      INTEGER kLayer2Sp,kCKD,kGasTemp,kLongOrShort
      INTEGER kJacobOutput,kFlux,kTempJac
      INTEGER kActualJacs,kActualJacsT,kActualJacsB !! all from kActualJacs!!
      INTEGER kSurfTemp,kRTP,kAFGLProf
      INTEGER kPlanckOut
      COMMON/ComBlock1/kLayer2Sp,kCKD,kGasTemp,kLongOrShort,kAFGLProf
      COMMON/ComBlock2/kJacobOutput,kFlux,kPlanckOut,kTempJac,kActualJacs
      COMMON/ComBlock3/kSurfTemp,kRTP,kActualJacsT,kActualJacsB

c these next few parameters are set in *RADNCE and *JACOBN
c rtp file azimuths used in Mie Scattering and Ocean Refl
c rtp file also may give latitude and month (via rtime)
      INTEGER kSolar,kThermal,kThermalJacob,kJacobian,kSetThermalAngle
      REAL kSolarAngle,kThermalAngle,kSolarRefl,kDefaultColMult
      REAL kSolAzi,kSatAzi,kWindSpeed,kLatitude,kMonth
      PARAMETER (kDefaultColMult = 0.1)
      COMMON/ComBlock4/kSolar,kThermal,kThermalJacob,kJacobian,
     $                 kSetThermalAngle
      COMMON/ComBlock5/kSolarAngle,kThermalAngle,kSolarRefl,
     $                 kSolAzi,kSatAzi,kWindSpeed,kLatitude,kMonth
      INTEGER ka100layerCloudType(kMaxUserSet),k100layerCloud
      COMMON/ComBlock6/ka100layerCloudType,k100layerCloud

c kDis_Nstr,kDis_Pts : make DISORT run faster
c kTemperVary : check how temp variations in TWOSTREAM affect the radiances
c kAvgMin     : is there too little scattering in kTWOSTREAM? Then speed up!!
      DOUBLE PRECISION kAvgMin
      INTEGER kDis_Nstr,kDis_Pts,kTemperVary
      COMMON/ComDISORT/kDis_Nstr,kDis_Pts,kTemperVary
      COMMON/ComHGPhase/kAvgMin
c these next few parameters are set in *SCATTR
c It also tells the RTP code or the general code when it can do scattering 
c (kcarta.x) and when it cannot (bkcarta.x)
      INTEGER kScatter,kWhichScatterCode,kAllowScatter
      COMMON/ComBlock7/kScatter,kWhichScatterCode,kAllowScatter

c thse are for overwriting the compressed database dirs (from SCATTER)
      INTEGER kAltComprDirs
      CHARACTER*80 kcaAltComprDirs
      COMMON/ComBlock8/kAltComprDirs,kcaAltComprDirs

c 2007
c NOTE there are 38 main gases in the HITRAN database;  plus about 13
c cross section gases; we have added on two new gases, 101 and 102 for 
c self and foreign water continuum
c also add on g103 for heavy water
c PARAMETER (kGasComp=28,kGasXsecLo=51,kGasXsecHi=63,kMaxGas=103)
c
c 2010
c NOTE there are 42 main gases in the HITRAN database;  plus about 30
c cross section gases; we have added on two new gases, 101 and 102 for 
c self and foreign water continuum
c also add on g103 for heavy water
c kMaxGas   == number of gases ID's that we can do radiative transfer for
c              (1 .. 102)
c kGasComp  == max gas ID for which we have k-comp code (1-28)or(1-kGasComp)
c kGasXsecLo  == min gas ID for which we have xsec calc (51-63)
c                                            or(kGasXsecLo-kGasXsecHi)
c kGasXsecHi  == max gas ID for which we have xsec calc (51-63)
c                                            or(kGasXsecLo-kGasXsecHi)
c kNewGasLo  == min gas ID for which we have new gases (101-102)
c                                            or(kNewGasLo-kNewGasHi)
c kNewGasHi  == max gas ID for which we have new gases (101-102)
c                                            or(kNewGasLo-kNewGasHi)
      INTEGER kMaxGas,kGasComp,kGasXsecLo,kGasXsecHi
      PARAMETER (kGasComp=42,kGasXsecLo=51,kGasXsecHi=81,kMaxGas=103)
      INTEGER kNewGasLo,kNewGasHi
      PARAMETER (kNewGasLo=101,kNewGasHi=102)
c 2013
c Add on 100 layer clouds
      INTEGER kNewCloudLo,kNewCloudHi
      PARAMETER (kNewCloudLo=201,kNewCloudHi=203)

c these are number of points/temperatures in CKD
      INTEGER kTempCKD,kFreqCKD
      PARAMETER (kTempCKD=31,kFreqCKD=2901)

c kMaxLayer == number of kCompressed database press layers from Ground to Top
c kMaxPts   == max number of frequencies per kcomp block file
      INTEGER kMaxLayer,kMaxPts
      PARAMETER (kMaxLayer=100,kMaxPts=10000)
      
c kMaxTemp  == number of different temps in compressed files (T-50,..,T+50)
c kMaxK     == max number of singular vectors used for reconstruction
c kMaxU     == max number of SVD vectors we wish to use during uncompression
c              (which must be less than or equal to kMaxK defined above)
c kMaxWater == max number of water offset profiles
c kMaxProf  == max number of temperature profiles

      INTEGER kMaxTemp,kMaxK,kMaxU,kMaxProf,kMaxWater
      PARAMETER (kMaxTemp=11,kMaxK=50,kMaxU=50,kMaxWater=5,kMaxProf=18)

C MXXMOL = maximum number of xsec gases
C MXXTMP = maximum number of temperature sets for a xsec gas
C MXXPTS = maximum number of xsec data points
C MXXSEC = maximum number of xsec data sets
      INTEGER MXXMOL, MXXTMP, MXXPTS, MXXSEC
      PARAMETER (MXXMOL=13, MXXTMP=6, MXXPTS=12808, MXXSEC=31)

c kNumWords    == number of keywords that could  be found in input .ip file
      INTEGER kNumWords
      PARAMETER (kNumWords=13)

c kPathsOut == the number of outputs per option
      INTEGER kPathsOut

c guess what kPi is
c kAvog      = Avogadro Number (kilo)
c kBoltzmann = Boltzmann constant
c kSunTemp   = temperature of the sun
c kTbdy      = Temperature of Space
c kMGC       = molar gas constant J Kg-1 K-1
c kPlanck1,kPlanck2 are the Planck constants (for blackbody radiance in terms
c of wavenumbers and units in terms of mW)
c note kPlanck1=1.1911E-5 ==> units in mW; kPlanck1=1.1911E-8 ==> units in W
      DOUBLE PRECISION kPi,kSunTemp,kTSpace,kAvog,kBoltzmann,kMGC
      DOUBLE PRECISION kPlanck1,kPlanck2,kAtm2mb
      PARAMETER (kPi=3.1415926535898d0,kSunTemp=5800.0d0,
     $    kTSpace=2.7d0,kAvog=6.022045d26,kBoltzmann=1.380658d-23)
      PARAMETER (kPlanck1=1.1911D-5,kPlanck2=1.4387863d0)
      PARAMETER (kAtm2mb=1013.25,kMGC=8.314674269981136)

c this is for normalization of beam term
      DOUBLE PRECISION kForP
c      kForP = 4.0           !what I had in kTwoStream before Jan 2006
c      kForP = 4.0*kPi       !fat    solar flux beam 
c      kForP = 1.0*kPi       !pencil solar flux beam 
c      kForP = 2.0           !pencil solar flux beam, after integ over 2pi 
c      !!! this is what should be correct
c      kForP = (4.0*kPi)     !this is for solar part of twostream,pclsam
      PARAMETER (kForP=4.0*kPi)

c----------------------------------------------------------------------

c kLBL    this is a parameter that was set to 5050 in LBLRTMv5.10 for the
c         water continuum calculations. Since kCARTA uses chunks of
c         kMaxPts=10000 pts, while LBLRTM code seemed to use chunks of 5050
c         for its computations, as well as coarse grids of size about 100
c         this parameter is set to 5000
      INTEGER kLBL
      PARAMETER (kLBL=5000)
c----------------------------------------------------------------------

c kHITRAN this is a parameter that alllows KCARTA to compute local 
c         lineshapes for a particular band. eg for 2350 band (strongest 
c         P-R sigma sigma CO2 band in 4 um), there are about 120 lines
      INTEGER kHITRAN
      PARAMETER (kHITRAN = 20000)

c----------------------------------------------------------------------

c kGenln2Water   = self broadening correction for water, using interpolation 
c                  in water partial pressure (+1) 
c                = just do what Genln2 does (which would be the same as the
c                  uncompresssion for CO2 (-1)
      INTEGER kGenln2Water
      PARAMETER (kGenln2Water=+1)

c----------------------------------------------------------------------
c store the number of compressed vectors, for runtime stats purposes
      INTEGER kaaNumVectors(kMaxGas,kMaxLayer),kOuterLoop
      COMMON/kNumV/kOuterLoop,kaaNumVectors

c----------------------------------------------------------------------
c this is new for version 0.97 and higher and some parts will change
c
c kW              == how many types of wavenumber spacings we have
c 1,2,3 refer to q,r,s , depends on wavenumber spacing 0.001, 0.0025, 0.005
c kaTag           == which of the wavenumber spacings this corresponds to
c kaCTag          == character prefix for which wavenumber spacings this corresponds to
c kMinFreq1,2,3   == min wavenumber (cm-1) allowed 
c kMaxFreq1,2,3   == max wavenumber (cm-1) allowed
c kFreqStep1,2,3  == wavenumber spacing
c kBlockSize1,2,3 == wavenumber spread in each kcomp file

c the specs for q,s (1,3) will probably change in the future
c the specs for r(2) are what we have had since 8/96 till present

c 1,2,3 refer to q,r,s (205-605, 605-2805, 2805-?) cm -1
c note : if last file is eg r2805_g2.dat, this means end freq for gas2=2830
c : prefixes : f,g,h,j,k,p,q  = farIR1   (   80 -   605 cm-1) 
c : prefixes : r              = reg IR   (  605 -  2830 cm-1) at 0.0025 cm-1
c : prefixes : s              = SWIR     ( 2830 -  3550 cm-1) 
c : prefixes : m,n,o          = SWIR/NIR ( 3550 -  12000 cm-1) 
c : prefixes : v              = vis      (12000 -  25000 cm-1) 
c : prefixes : u              = uv       (25000 -  45000 cm-1) at 0.1000 cm-1
c kNumKcomp  = number of kcompressed files
c kNumkCompT = sum of all kNumkComp(1)+kNumkComp(2)+kNumkComp(3)+ ....
c see SUBROUTINE CompFileName in s_misc.f
      INTEGER kW
      PARAMETER (kW=14)
      REAL kaMaxFr(kW),kaMinFr(kW),kaFrStep(kW),kaBlSize(kW)
      CHARACTER kaCTag(kW)
      INTEGER kaTag(kW)
      INTEGER kaNumKcomp(kW),kNumKCompT
c also need stuff for LBL computations at 5 point finer resolution, and also
c at medium and coarse resolution
      DOUBLE PRECISION kaFineFrStep(kW),kaMediumFrStep(kW),kaCoarseFrStep(kW)
c I changed [4500,5000] to [4050,4950] just to make life easy for testing
c NOTE that "s" is also chunks of 25 cm-1, just like orig kCARTA database "r"

c this code is written with the Matlab "dump_kaTag_for_predefined.m" code
c don't foget to match up parameter (kW = XYZ) with number of bands!
cccc                       <-----------FIR------------------><IR><SWIR> <---- NIR --><VIS><UV>
cccc <<<<<<<<<<<<<<< ----------- cut here and replace with dump_kaTag_for_predefined.param ---------->>>>>>

      PARAMETER (kNumkCompT =  380 ) 
      DATA kaTag        /  02,  04,  06,  08,  10,  12,  15,  20,  25,  30,  35,  40,  50,  55  / 
      DATA kaNumkComp   /  30,  20,  20,  28,  34,  21,  07,  89,  30,  21,  19,  16,  26,  19  / 
      DATA kaCTag       / 'f', 'g', 'h', 'j', 'k', 'p', 'q', 'r', 's', 'm', 'n', 'o', 'v', 'u'  / 
      DATA kaMinFr        /   15.0000,   30.0000,   50.0000,   80.0000,
     $                    140.0000,  300.0000,  500.0000,  605.0000,
     $                    2830.0000,  3550.0000,  5550.0000,  8250.0000,
     $                    12000.0000,  25000.0000  / 
      DATA kaMaxFr        /   30.0000,   50.0000,   80.0000,  150.0000,
     $                    310.0000,  510.0000,  605.0000,  2830.0000,
     $                    3580.0000,  5650.0000,  8400.0000,  12250.0000,
     $                    25000.0000,  44000.0000  / 
      DATA kaFrStep       /  5.0000e-05,  1.0000e-04,  1.5000e-04,  2.5000e-04,
     $                    5.0000e-04,  1.0000e-03,  1.5000e-03,  2.5000e-03,
     $                    2.5000e-03,  1.0000e-02,  1.5000e-02,  2.5000e-02,
     $                    5.0000e-02,  1.0000e-01  / 
      DATA kaBlSize       /    0.5000,    1.0000,    1.5000,    2.5000,
     $                      5.0000,   10.0000,   15.0000,   25.0000,
     $                     25.0000,  100.0000,  150.0000,  250.0000,
     $                    500.0000,  1000.0000  / 
      DATA kaFineFrStep   /  1.0000e-05,  2.0000e-05,  3.0000e-05,  5.0000e-05,
     $                    1.0000e-04,  2.0000e-04,  3.0000e-04,  5.0000e-04,
     $                    5.0000e-04,  2.0000e-03,  3.0000e-03,  5.0000e-03,
     $                    1.0000e-02,  2.0000e-02  / 
      DATA kaMediumFrStep /  2.0000e-03,  4.0000e-03,  6.0000e-03,  1.0000e-02,
     $                    2.0000e-02,  4.0000e-02,  6.0000e-02,  1.0000e-01,
     $                    1.0000e-01,  4.0000e-01,  6.0000e-01,  1.0000e+00,
     $                    2.0000e+00,  4.0000e+00  / 
      DATA kaCoarseFrStep /  1.0000e-02,  2.0000e-02,  3.0000e-02,  5.0000e-02,
     $                    1.0000e-01,  2.0000e-01,  3.0000e-01,  5.0000e-01,
     $                    5.0000e-01,  2.0000e+00,  3.0000e+00,  5.0000e+00,
     $                    1.0000e+01,  2.0000e+01  / 

cccc <<<<<<<<<<<<<<< ----------- cut here and replace with dump_kaTag_for_predefined.param ---------->>>>>>
c thus last possible file in q series =  q795_gX.dat has data from  795-805
c thus last possible file in r series = r2805_gX.dat has data from 2805-2830
c thus last possible file in s series = s2955_gX.dat has data from 2955-3005
c------------------------------------------------------------------------

