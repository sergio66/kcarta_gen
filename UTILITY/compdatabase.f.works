c this program reads in a list of compressed data files and outputs 
c this program used to be called compdatabase97.f, but now since the 
c compressed database has both the main gases and the cross section
c gases, we just call it compdatabase.f

c this program is modified version of compdatabase.f since it goes thru the
c subdirectories and produces a 4 column format, 
c   GASID  START-FREQ   STOP-FREQ  TAG
c where TAG tells us if this is a 0.001, 0.0025 or 0.005 spacing, 
c depending on the prefix of the file.
c    TAG = 1  qXXX-gI.dat     0.001  wavenumber spacing   205-605
c    TAG = 2  rXXX-gI.dat     0.0025 wavenumber spacing   0605-2805 cm-1
c    TAG = 3  sXXX-gI.dat     0.0025 wavenumber spacing   2830-3305 cm-1

c %% orig
c      PARAMETER (kNumkCompT=188)
c      DATA kaTag        / 1,   2,   3,   4,   5,   6,   7,  8,   9   /
c      DATA kaNumkComp   / 08, 89,  09,  20,  24,  16,  20,  1,   1   /
c      DATA kaCTag       /'q', 'r', 'm', 'n', 'v', 'w', 's', 'k', 'p' /
c      DATA kaMinFr      /0500.00000,   0605.00000,    4050.00000,  5000.00000,
c     $                   8000.00000,   14000.00000,   2830.00000, 
c     $                   0200.00000,   0355.00000/
c      DATA kaMaxFr     /0605.00000,   2830.00000,    4950.00000,   8000.00000,
c     $                   14000.00000,  22000.00000,   3305.00000,
c     $                    0355.00000,   0500.00000/
c      DATA kaFrStep  /1.500000e-3,  2.500000e-3,   1.000000e-2,  1.500000e-2,
c     $                 2.500000e-2,  5.000000e-2,   2.500000e-3,
c     $                 0.500000e-3,  1.000000e-3/

c %% late Dec 2009
c      PARAMETER (kNumkCompT =  288 ) 
c      DATA kaTag        /  08,  10,  12,  15,  20,  25,  30,  35,  40,  50  / 
c      DATA kaNumkComp   /  28,  34,  21,  07,  89,  30,  09,  30,  24,  16  / 
c      DATA kaCTag       / 'j', 'k', 'p', 'q', 'r', 's', 'm', 'n', 'v', 'w'  / 
c      DATA kaMinFr        /   80.0000,  140.0000,  300.0000,  500.0000,
c     $                    605.0000,  2830.0000,  4050.0000,  5000.0000,
c     $                    8000.0000,  14000.0000  / 
c      DATA kaMaxFr        /  150.0000,  310.0000,  510.0000,  605.0000,
c     $                    2830.0000,  3580.0000,  4950.0000,  8000.0000,
c     $                    14000.0000,  22000.0000  / 
c      DATA kaFrStep       /  2.5000e-04,  5.0000e-04,  1.0000e-03,  1.5000e-03,
c     $                    2.5000e-03,  2.5000e-03,  1.0000e-02,  1.0000e-02,
c     $                    2.5000e-02,  5.0000e-02  / 
c      DATA kaBlSize       /    2.5000,    5.0000,   10.0000,   15.0000,
c     $                     25.0000,   25.0000,  100.0000,  100.0000,
c     $                    250.0000,  500.0000  / 
c      DATA kaFineFrStep   /  5.0000e-05,  1.0000e-04,  2.0000e-04,  3.0000e-04,
c     $                    5.0000e-04,  5.0000e-04,  2.0000e-03,  2.0000e-03,
c     $                    5.0000e-03,  1.0000e-02  / 
c      DATA kaMediumFrStep /  1.0000e-02,  2.0000e-02,  4.0000e-02,  6.0000e-02,
c     $                    1.0000e-01,  1.0000e-01,  4.0000e-01,  4.0000e-01,
c     $                    1.0000e+00,  2.0000e+00  / 
c      DATA kaCoarseFrStep /  5.0000e-02,  1.0000e-01,  2.0000e-01,  3.0000e-01,
c     $                    5.0000e-01,  5.0000e-01,  2.0000e+00,  2.0000e+00,
c     $                    5.0000e+00,  1.0000e+01  / 

ccccc check n_gas_wt_spectra.f for allowed gases <<<<<<<<<<<<<<-------------
c  check to see the following reference profiles exist : 1,2,3,4,5,6,7,8,9 
c         10,11,12,X,X,15,16,X,18,19,20,21,22,23,X,25,26,27,X PLUS kSelf,kFor 
ccccc check n_gas_wt_spectra.f for allowed gases <<<<<<<<<<<<<<-------------

c 1)file containing the GasID's and frequencies of each file comp1.param
c 2)file containing the summary of GasID's and frequencies comp.param in the
c   4 column format   GASID  START-FREQ   STOP-FREQ  TAG
c comp.param is used by kcarta.x

c to use this code, go to the subdir containing the database
c eg cd /salsify/production3/motteler/sergio/kcarta/h2o.ieee-be
c do ls -1 *.dat > & /salsify/users/sergio/KCARTA/UTILITY/compdatabase
c then run this program
c you will have to do it separately for the water database and the "rest
c of gases" database; combine the two and then separate out the minor or
c cross section gases. eg put the results into 2 files, 
c '../DATA/General/xsec107.param' and '../DATA/General/comp107.param'

      IMPLICIT NONE

      include '../INCLUDE/kcarta.param'

c the input file that contains the directory listing has all the files 
c that start with ""q" r" "s"  eg r605_g2.dat
      CHARACTER*80 caStr
      REAL raaArrK(kMaxPts,3),raaBlockK(kMaxPts,3)
      REAL raaArrP(kMaxPts,3),raaBlockP(kMaxPts,3)
      REAL raaArrQ(kMaxPts,3),raaBlockQ(kMaxPts,3)
      REAL raaArrR(kMaxPts,3),raaBlockR(kMaxPts,3)
      REAL raaArrS(kMaxPts,3),raaBlockS(kMaxPts,3)
      REAL raaArrM(kMaxPts,3),raaBlockM(kMaxPts,3)
      REAL raaArrJ(kMaxPts,3),raaBlockJ(kMaxPts,3)

      INTEGER iInt,iTag
      INTEGER iCntJ, iCntK, iCntM, iCntP, iCntQ, iCntR, iCntS
      INTEGER iCnt2J,iCnt2K,iCnt2M,iCnt2P,iCnt2Q,iCnt2R,iCnt2S

c set GasID,start/stop freq WAY above what they can be!
      DO iInt = 1,kMaxPts
        raaArrJ(iInt,1) = 10000000.0
        raaArrJ(iInt,2) = 10000000.0 
        raaArrJ(iInt,3) = 10000000.0      

        raaArrK(iInt,1) = 10000000.0
        raaArrK(iInt,2) = 10000000.0 
        raaArrK(iInt,3) = 10000000.0      

        raaArrP(iInt,1) = 10000000.0
        raaArrP(iInt,2) = 10000000.0 
        raaArrP(iInt,3) = 10000000.0      

        raaArrM(iInt,1) = 10000000.0
        raaArrM(iInt,2) = 10000000.0 
        raaArrM(iInt,3) = 10000000.0      

        raaArrQ(iInt,1) = 10000000.0
        raaArrQ(iInt,2) = 10000000.0 
        raaArrQ(iInt,3) = 10000000.0      

        raaArrR(iInt,1) = 10000000.0
        raaArrR(iInt,2) = 10000000.0 
        raaArrR(iInt,3) = 10000000.0      

        raaArrS(iInt,1) = 10000000.0
        raaArrS(iInt,2) = 10000000.0 
        raaArrS(iInt,3) = 10000000.0      
        END DO

      iCntJ = 0
      iCntK = 0
      iCntM = 0
      iCntP = 0
      iCntQ = 0
      iCntR = 0
      iCntS = 0

c do ls -1 compdatapath/*.dat> & compdatabase and then run this program
      OPEN(UNIT=10,FILE='compdatabase',FORM='FORMATTED',STATUS='OLD')
 11   READ(10,1000,END=100) caStr
 1000 FORMAT(A80)
      IF (caStr(1:1).EQ. 'j') THEN
        print *,caStr
        CALL process(caStr,raaArrK,iCntK,2.5) !10000.0*0.00025
        END IF
      IF (caStr(1:1).EQ. 'k') THEN
        CALL process(caStr,raaArrK,iCntK,5.0) !10000.0*0.0005
        END IF
      IF (caStr(1:1).EQ. 'p') THEN
        CALL process(caStr,raaArrP,iCntP,10.0) !10000.0*0.0010
        END IF
      IF (caStr(1:1).EQ. 'q') THEN
        CALL process(caStr,raaArrQ,iCntQ,15.0) !10000.0*0.0015
        END IF
      IF (caStr(1:1).EQ. 'r') THEN
        CALL process(caStr,raaArrR,iCntR,25.0) !10000.0*0.0025
        END IF
      IF (caStr(1:1).EQ. 's') THEN
        CALL process(caStr,raaArrS,iCntS,25.0) !10000.0*0.0025
        END IF
      IF (caStr(1:1).EQ. 'm') THEN
        CALL process(caStr,raaArrQ,iCntQ,100.0) !10000.0*0.01
        END IF
      GO TO 11

 100  CONTINUE     
      CLOSE(10)

c%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
c first sort array raaArr according to frequency indices
c then sort array raaArr according to iGasID
      IF (iCntJ .GT. 0) THEN
        CALL dosort(raaArrJ,iCntJ,2)
        CALL dosort(raaArrJ,iCntJ,1)
        END IF 

      IF (iCntK .GT. 0) THEN
        CALL dosort(raaArrK,iCntK,2)
        CALL dosort(raaArrK,iCntK,1)
        END IF 

      IF (iCntP .GT. 0) THEN
        CALL dosort(raaArrP,iCntP,2)
        CALL dosort(raaArrP,iCntP,1)
        END IF 

      IF (iCntQ .GT. 0) THEN
        CALL dosort(raaArrQ,iCntQ,2)
        CALL dosort(raaArrQ,iCntQ,1)
        END IF 

      IF (iCntR .GT. 0) THEN
        CALL dosort(raaArrR,iCntR,2)
        CALL dosort(raaArrR,iCntR,1)
        END IF

      IF (iCntS .GT. 0) THEN
        CALL dosort(raaArrS,iCntS,2)
        CALL dosort(raaArrS,iCntS,1)
        END IF

      IF (iCntM .GT. 0) THEN
        CALL dosort(raaArrM,iCntM,2)
        CALL dosort(raaArrM,iCntM,1)
        END IF

c%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
c first output all the file info that has been found, into comp1.param
c then summarize the sorted indices so that "blocks" are output, instead
c of individual file information, not comp.param

c the tags are stored in ../INCLUDE/pre_defined.param

      OPEN(UNIT=11,FILE='comp1.param',FORM='FORMATTED',STATUS='UNKNOWN')
      OPEN(UNIT=12,FILE='comp.param',FORM='FORMATTED',STATUS='NEW')

      IF (iCntJ .GT. 0) THEN
        iTag = 08        !! spacing = 0.000025 cm-1
        DO iInt=1,iCntJ
          WRITE (11,2000) iInt,IFIX(raaArrJ(iInt,1)),raaArrJ(iInt,2),
     $                  raaArrJ(iInt,3),iTag
          END DO
        CALL doBlock(raaArrJ,iCntJ,raaBlockJ,iCnt2J)
        DO iInt=1,iCnt2J
          WRITE (12,2010) IFIX(raaBlockJ(iInt,1)),raaBlockJ(iInt,2),
     $                  raaBlockJ(iInt,3),iTag
          END DO
        END IF

      IF (iCntK .GT. 0) THEN
        iTag = 10        !! spacing = 0.00005 cm-1
        DO iInt=1,iCntK
          WRITE (11,2000) iInt,IFIX(raaArrK(iInt,1)),raaArrK(iInt,2),
     $                  raaArrK(iInt,3),iTag
          END DO
        CALL doBlock(raaArrK,iCntK,raaBlockK,iCnt2K)
        DO iInt=1,iCnt2K
          WRITE (12,2010) IFIX(raaBlockK(iInt,1)),raaBlockK(iInt,2),
     $                  raaBlockK(iInt,3),iTag
          END DO
        END IF

      IF (iCntP .GT. 0) THEN
        iTag = 12        !! spacing = 0.0010 cm-1
        DO iInt=1,iCntP
          WRITE (11,2000) iInt,IFIX(raaArrP(iInt,1)),raaArrP(iInt,2),
     $                  raaArrP(iInt,3),iTag
          END DO
        CALL doBlock(raaArrP,iCntP,raaBlockP,iCnt2P)
        DO iInt=1,iCnt2P
          WRITE (12,2010) IFIX(raaBlockP(iInt,1)),raaBlockP(iInt,2),
     $                  raaBlockP(iInt,3),iTag
          END DO
        END IF

      IF (iCntQ .GT. 0) THEN
        iTag = 15        !! spacing = 0.0015 cm-1
        DO iInt=1,iCntQ
          WRITE (11,2000) iInt,IFIX(raaArrQ(iInt,1)),raaArrQ(iInt,2),
     $                  raaArrQ(iInt,3),iTag
          END DO
        CALL doBlock(raaArrQ,iCntQ,raaBlockQ,iCnt2Q)
        DO iInt=1,iCnt2Q
          WRITE (12,2010) IFIX(raaBlockQ(iInt,1)),raaBlockQ(iInt,2),
     $                  raaBlockQ(iInt,3),iTag
          END DO
        END IF

      IF (iCntR .GT. 0) THEN
        iTag = 20        !! spacing = 0.0025 cm-1
        DO iInt=1,iCntR
          WRITE (11,2000) iInt,IFIX(raaArrR(iInt,1)),raaArrR(iInt,2),
     $                  raaArrR(iInt,3),iTag
          END DO
        CALL doBlock(raaArrR,iCntR,raaBlockR,iCnt2R)
        DO iInt=1,iCnt2R
          WRITE (12,2010) IFIX(raaBlockR(iInt,1)),raaBlockR(iInt,2),
     $                  raaBlockR(iInt,3),iTag
          END DO
        END IF

      IF (iCntS .GT. 0) THEN
        iTag = 25        !! spacing = 0.0025 cm-1
        DO iInt=1,iCntS
          WRITE (11,2000) iInt,IFIX(raaArrS(iInt,1)),raaArrS(iInt,2),
     $                  raaArrS(iInt,3),iTag
          END DO
        CALL doBlock(raaArrS,iCntS,raaBlockS,iCnt2S)
        DO iInt=1,iCnt2S
          WRITE (12,2010) IFIX(raaBlockS(iInt,1)),raaBlockS(iInt,2),
     $                  raaBlockS(iInt,3),iTag
          END DO
        END IF

      IF (iCntM .GT. 0) THEN
        iTag = 30        !! spacing = 0.01 cm-1
        DO iInt=1,iCntM
          WRITE (11,2000) iInt,IFIX(raaArrM(iInt,1)),raaArrM(iInt,2),
     $                  raaArrM(iInt,3),iTag
          END DO
        CALL doBlock(raaArrM,iCntM,raaBlockM,iCnt2M)
        DO iInt=1,iCnt2M
          WRITE (12,2010) IFIX(raaBlockM(iInt,1)),raaBlockM(iInt,2),
     $                  raaBlockM(iInt,3),iTag
          END DO
        END IF

      CLOSE(11)
      CLOSE(12)

 2000 FORMAT(I3,'  ',I3,'  ',f14.6,'   ',f14.6,'     ',I3)
 2010 FORMAT(I3,'  ',f14.6,'   ',f14.6,'     ',I3)


      END

c************************************************************************
c this subroutine goes thru raaArr and puts every gas in terms of freq blocks
      SUBROUTINE doBlock(raaArr,iCnt,raaBlock,iCnt2)

c the information in raaArr is summarized and saved to raaBlock
c iCnt  is the total number of r*.dat files read in file comdatabase
c iCnt2 is the summarized number of blocks that are output

      IMPLICIT NONE
      include '../INCLUDE/kcarta.param'

      REAL raaArr(kMaxPts,3),raaBlock(kMaxPts,3)
      INTEGER iCnt,iCnt2

c local variables
      INTEGER iT,iBlock,iBoo
      REAL rGasID,rGasIDold,rStart,rStop

      rGasIDold=raaArr(1,1)
      rStart=raaArr(1,2)
      rStop=raaArr(1,3) 

      iT=2 
      iBlock=1
             
 70   CONTINUE
      IF (iT .LE. iCnt) THEN
        rGasId=raaArr(iT,1)
c check to see of the gas is the same
        IF (abs(rGasId-rGasIdOld) .LE. 0.1) THEN
c check if the stop freq set frm previous index, and this start, are same
          IF (abs(rStop-raaArr(iT,2)) .LE. 0.1) THEN
            rStop=raaArr(iT,3)
          ELSE
            raaBlock(iBlock,1)=rGasIDold
            raaBlock(iBlock,2)=rStart 
            raaBlock(iBlock,3)=rStop
            iBlock=iBlock+1
            rGasIDold=raaArr(iT,1)
            rStart=raaArr(iT,2)
            rStop=raaArr(iT,3) 
            END IF
        ELSE     
          raaBlock(iBlock,1)=rGasIDold
          raaBlock(iBlock,2)=rStart 
          raaBlock(iBlock,3)=rStop
          iBlock=iBlock+1
          rGasIDold=raaArr(iT,1)
          rStart=raaArr(iT,2)
          rStop=raaArr(iT,3) 
          END IF
        iT=iT+1
        GO TO 70
        END IF
 
      raaBlock(iBlock,1)=rGasIDold
      raaBlock(iBlock,2)=rStart 
      raaBlock(iBlock,3)=rStop
 
      iCnt2=iBlock

      DO iT=1,iCnt2
        print *,iT,raaBlock(iT,1),raaBlock(iT,2),raaBlock(iT,3) 
        END DO

      RETURN
      END 
 
c************************************************************************
c this subroutine takes the string apart, finding the gas id and freq range
c the string is of the form rFREQ_gID.dat eg r605_g1.dat
      SUBROUTINE process(caStr,raaArr,iCnt,rJump)

      IMPLICIT NONE
      include '../INCLUDE/kcarta.param'

c take string caStr apart, finding the gas id and freq range, saving for each
c file, the gasID in raaArr(1), start freq in raaArr(2) and stop freq in 
c raaArr(3)
c the string is of the form rFREQ_gID.dat eg r605_g1.dat
      CHARACTER*80 caStr
      REAL raaArr(kMaxPts,3),rJump
      INTEGER iCnt

c local variables
      CHARACTER*10 caBlank
      INTEGER i1,i2,iStart,iGasID
      REAL rStart,rStop

      iCnt=iCnt+1
      
c first read the start freq ... stop freq is rJump cm away 
      CALL doblank(caBlank)
      i1=2
      i2=i1
 66   CONTINUE
      IF (caStr(i2:i2) .NE. '_') THEN
        i2=i2+1
        GO TO 66 
        END IF 

      i2=i2-1
      caBlank(1:i2-i1+1)=caStr(i1:i2)
      read(caBlank,*) iStart
      rStart=iStart*1.0
      rStop=rStart+rJump
      raaArr(iCnt,2)=rStart
      raaArr(iCnt,3)=rStop

c now read the gas id
      CALL doblank(caBlank)
      i1=i2+3
      i2=i1
 69   CONTINUE
      IF (caStr(i2:i2) .NE. '.')  THEN
        i2=i2+1
        GO TO 69
        END IF
      i2=i2-1
      caBlank(1:12-i1+1)=caStr(i1:i2)
      read(caBlank,*) iGasID
      raaArr(iCnt,1)=iGasID*1.00

      print *,rStart,rStop,iGasID

      RETURN
      END 

c************************************************************************
c this subroutine sorts the array in terms of index iIndex. 
c this is a bubble sort : refer Dale/Lilly : Data Structures
      SUBROUTINE dosort(raaArr,iCnt,iIndex)

      IMPLICIT NONE
      include '../INCLUDE/kcarta.param'

c sort rows 1..iCnt of array raaArr, according to the elements in column iCnt
      REAL raaArr(kMaxPts,3)
      INTEGER iCnt,iIndex

      REAL rT(3)
      INTEGER iI,iJ,iTrue,i1,i2

      i1=1
      iTrue=1

 60   CONTINUE
      IF ((i1 .LT. iCnt) .AND. (iTrue .GT. 0)) THEN
        i2=iCnt
        iTrue=-1
 70     CONTINUE
        IF (i2 .GT. i1) THEN
          IF (raaArr(i2,iIndex) .LT. raaArr(i2-1,iIndex)) THEN
            iTrue=1
            rT(1)=raaArr(i2-1,1)
            rT(2)=raaArr(i2-1,2)
            rT(3)=raaArr(i2-1,3)
	
            raaArr(i2-1,1)=raaArr(i2,1)
            raaArr(i2-1,2)=raaArr(i2,2)
            raaArr(i2-1,3)=raaArr(i2,3)

            raaArr(i2,1)=rT(1)
            raaArr(i2,2)=rT(2)
            raaArr(i2,3)=rT(3)

            END IF
          i2=i2-1
          GO TO 70
          END IF
      
        i1=i1+1
        GO TO 60
        END IF

       RETURN
       END
c************************************************************************
c this subroutine BLANKS the string
      SUBROUTINE doblank(caBlank)

      IMPLICIT NONE
      include '../INCLUDE/kcarta.param'

      CHARACTER*10 caBlank
      INTEGER iInt

      DO iInt=1,10
        caBlank(iInt:iInt)=' '
        END DO

      RETURN
      END 
c************************************************************************

